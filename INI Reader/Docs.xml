<?xml version="1.0" encoding="utf-8" ?>

<docs>
  <classes>
    <factory>
      <summary>
        The entry-point for this library. Use this class to create <see cref="ISetting(Of T)"/> and <see cref="ISettingsFile"/> objects.<br/>
        <see cref="ISettingsFile"/> objects behave identically to <see cref="Factory"/> objects, but do not need a file path to access their settings.<br/>
        Settings are shared between <see cref="ISettingsFile"/>s and the <see cref="Factory"/>, so they may be used interchangably.
      </summary>
    </factory>
    
    <setting>
      <summary>
        For internal use. Declare strongly-typed settings using <see cref="ISetting(Of T)"/> instead.
      </summary>
    </setting>
    
    <settingOfT>
      <summary>
        A strongly-typed settings object.<br/>
        Use this to store your settings.<br/>
      </summary>
    </settingOfT>
    
    <settingsFile>
      
    </settingsFile>
  </classes>

  <events>
    <settingChanged>
      <summary>
        Raised when this settings value changes.
      </summary>
      <param name="sender">A reference to the setting being changed.</param>
      <param name="e">Contains both the new and old setting value.</param>
    </settingChanged>
  </events>
  <methods>
    <equals parentClass="setting">
      <summary>
        Check if this setting is the same as another setting.
      </summary>
    </equals>
    
    <getSetting>
      <summary>
        Get the setting in the specified <paramref name="Section"/> with the specified <paramref name="Name"/>.
      </summary>
      <summary parentClass="factory">
        Return a setting with the specified <paramref name="FilePath"/>, <paramref name="Section"/>, and <paramref name="Name"/>.
      </summary>
    </getSetting>

    <getSettingsFile>
      <summary>
        Get a reference to the <see cref="ISettingsFile"/> representing the settings file at the specified <paramref name="FilePath"/>. The file itself does not need to exist, but its parent folder does.
      </summary>
      <exception cref="IO.DirectoryNotFoundException"></exception>
    </getSettingsFile>
    
    <isBoolean>
      <summary>
        Check if <see cref="ISetting(Of T).Value"/> is a <see cref="Boolean"/> value.
      </summary>
      <returns>
        A <see cref="Boolean"/> indicating whether or not this instance of <see cref="ISetting(Of T).Value"/> is <see cref="Boolean"/>.
    </returns>
    </isBoolean>

    <isWholeNumber>
      <summary>
        Check if <see cref="ISetting(Of T).Value"/> is a whole number.
      </summary>
      <returns>
        A <see cref="Boolean"/> value indicating whether or not this instance of <see cref="ISetting(Of T).Value"/> is a whole number.
      </returns>
    </isWholeNumber>
    
    <removeSetting>
      <summary>
        Remove a setting from this file.
      </summary>
      <exception cref="ArgumentNullException"></exception>
    </removeSetting>

    <removeSettingsFile>
      <summary>
        Remove the <see cref="ISettingsFile"/> associated with the supplied <paramref name="FilePath"/> from the internal cache and force its' contents to be written to disk.<br/>
        This is not necessary under normal circumstances.
      </summary>
    </removeSettingsFile>
    
    <toBoolean>
      <summary>
        Convert the value of this setting to a <see cref="Boolean"/>.
      </summary>
      <exception cref="ArgumentNullException"></exception>
      <exception cref="FormatException"></exception>
    </toBoolean>

    <toLong>
      <summary>
        Convert the value of this setting to the <see cref="Long"/> data-type.
      </summary>
      <returns>
        A <see cref="Long"/>, if the conversion succeeds.
      </returns>
      <exception cref="ArgumentNullException"></exception>
      <exception cref="FormatException"></exception>
      <exception cref="OverflowException"></exception>
    </toLong>

    <toString parentClass="setting">
      <summary>
        Convert the value of this setting to a <see cref="String"/>.
      </summary>
    </toString>
  </methods>

  <parameters>
    <defaultValue>
      <param name="DefaultValue">
        The default value of this setting.<br/>
        If the requested setting is not in this file, it is created using this value as the initial value.
      </param>
    </defaultValue>

    <filePath>
      <param name="FilePath">
        The full path to the target file. File suffix is optional.
      </param>
    </filePath>

    <killFile>
      <param name="KillFile">
        Specifies whether or not the actual file at <paramref name="FilePath"/> should be deleted after <see cref="ISettingsFile"/>'s contents are written to disk.
      </param>
    </killFile>

    <name type="string">
      <param name="Name">
        The name of this setting.
      </param>
    </name>
    <name type="userDefined">
      <param name="Name">
        The name of this setting.<br/>
        See <see cref="Abstract.UserDefinedSetting"/> for more information.
      </param>
    </name>

    <section type="string">
        <param name="Section">
          The section containing this setting.<br/>
        </param>
    </section>
    <section type="userDefined">
      <param name="Section">
        The section containing this setting.<br/>
        See <see cref="Abstract.UserDefinedSection"/> for more information.
      </param>
    </section>

    <setting>
      <param name="Setting">
        The <see cref="ISetting"/> to be removed.
      </param>
  </setting>
    
    <obj parentMethod="equals">
      <param name="obj">
        The setting to compare this setting to.
      </param>
    </obj>
  </parameters>

  <genericParameters>
    <T>
      <typeparam name="T">
        <para>The type of value contained by the target setting.</para>
        Using <see cref="ComponentModel.TypeDescriptor.GetConverter"/> must yield the correct value of <typeparamref name="T"/> when supplied with a <see cref="String"/> obtained by calling <typeparamref name="T"/>.<c>ToString()</c>.<br/>
        Creating your own TypeConverter is not necessary unless a custom data-type is used.
      </typeparam>
    </T>
  </genericParameters>

  <properties>
    <defaultValue>
      <summary>
        The default value of this setting.
      </summary>
    </defaultValue>
    
    <section>
      <summary>
        The section containing this setting.
      </summary>
    </section>

    <name>
      <summary>
        The name of this setting.
      </summary>
    </name>
    
    <value>
      <summary>
        The current value of this setting.
      </summary>
    </value>
  </properties>
</docs>